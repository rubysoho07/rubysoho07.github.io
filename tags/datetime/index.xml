<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>datetime on GoniGoni!</title>
    <link>/tags/datetime/</link>
    <description>Recent content in datetime on GoniGoni!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 13 Sep 2018 00:08:00 +0900</lastBuildDate><atom:link href="/tags/datetime/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python Datetime의 fromtimestamp() 사용 시 주의할 점</title>
      <link>/posts/python-datetime-fromtimestamp/</link>
      <pubDate>Thu, 13 Sep 2018 00:08:00 +0900</pubDate>
      
      <guid>/posts/python-datetime-fromtimestamp/</guid>
      <description>최근에 Timestamp가 있는 데이터를 다루다가, 신기한 버그를 발견하여 여기에 기록해 본다. 해당 문제가 수정된 것 같기는 한데, 아직 배포는 안 된 것 같다.
Windows에서 발생하는 버그   fromtimestamp 함수의 버그 (Windows)
  해당 이슈에 대해 설명한 부분을 확인하면, 0에서 86399 사이의 값을 입력하면 OSError가 발생한다.
Ubuntu에서는? 잘 동작한다. 심지어 Windows 10에 깔린 Ubuntu를 이용했고, 3.5.x 버전인데도 멀쩡히 잘 돌아간다.
  Ubuntu에서는 정상적으로 동작한다.
  참고자료  https://bugs.</description>
    </item>
    
    <item>
      <title>Python Datetime으로 서로 다른 시간대 다루기</title>
      <link>/posts/python-datetime-test/</link>
      <pubDate>Thu, 17 May 2018 22:06:00 +0900</pubDate>
      
      <guid>/posts/python-datetime-test/</guid>
      <description>여러 국가에 걸쳐 시간과 관련된 데이터를 얻을 때 시간대가 가장 이슈가 될 것이다. 그리고 AWS와 같이 UTC를 기준으로 하는 서비스가 있기 때문에, 우리나라의 시간대를 기준으로 프로그램을 만들 때 고민이 되는 부분이 있다.
시간대를 다루기 위해 pytz와 같은 라이브러리가 있지만, 이번에는 파이썬이 기본적으로 제공하는 datetime 모듈만 이용해서 시간대를 다루어 보고자 한다.
현재 시간 구하기 / UTC 기준 시간 구하기 현재 시간을 구하기 위해서는 datetime.datetime.now()를 이용한다.
&amp;gt;&amp;gt;&amp;gt; import datetime &amp;gt;&amp;gt;&amp;gt; datetime.datetime.now() datetime.datetime(2018, 5, 17, 21, 43, 13, 554579) 한편, UTC 기준의 현재 시간을 구하기 위해서는 datetime.</description>
    </item>
    
  </channel>
</rss>
