<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Argo Workflow on GoniGoni!</title>
    <link>/tags/argo-workflow/</link>
    <description>Recent content in Argo Workflow on GoniGoni!</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 07 Jul 2024 19:32:34 +0900</lastBuildDate>
    <atom:link href="/tags/argo-workflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Argo Workflows 이용해 보기</title>
      <link>/posts/argo-workflows/</link>
      <pubDate>Sun, 07 Jul 2024 19:32:34 +0900</pubDate>
      <guid>/posts/argo-workflows/</guid>
      <description>&lt;p&gt;예전에 여러 단계가 있는 작업을 해야 할 때 AWS의 Step Functions를 이용한 적이 있었습니다. Step Functions의 경우, Lambda 함수를 연결해서 쓴 적이 많았고, 오래 걸리는 작업은 다른 방법으로 구축할 수 있습니다. (이전에 올렸던 &lt;a href=&#34;/posts/step-function-with-python/&#34;&gt;Python으로 Step Functions 활동 만들기&lt;/a&gt; 문서를 참고해 주세요)&lt;/p&gt;&#xA;&lt;p&gt;한편, 다른 방법은 없나 찾아보다가 Airflow를 알게 되었습니다. 그래서 Airflow도 테스트한 적이 있었는데요. (이전에 올렸던 데이터 분석 워크플로우를 처음부터 만들어 보기 &lt;a href=&#34;/posts/data-workflow-from-scratch/&#34;&gt;1편&lt;/a&gt;, &lt;a href=&#34;/posts/data-workflow-from-scratch-2/&#34;&gt;2편&lt;/a&gt;을 참고해 주세요)&lt;/p&gt;&#xA;&lt;p&gt;최근 우연하게 Kubernetes에서 Workflow를 관리할 수 있는 Argo Workflow에 대해 알게 되었습니다. 그래서 이번 글에서는 Argo Workflow의 사용법을 알아보고자 합니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
