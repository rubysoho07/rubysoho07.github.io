<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Boto3 on GoniGoni!</title>
    <link>/tags/boto3/</link>
    <description>Recent content in Boto3 on GoniGoni!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 28 Jun 2021 22:34:04 +0900</lastBuildDate><atom:link href="/tags/boto3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Boto3를 쓰면서 겪었던 일들 모음</title>
      <link>/posts/boto3-note/</link>
      <pubDate>Mon, 28 Jun 2021 22:34:04 +0900</pubDate>
      
      <guid>/posts/boto3-note/</guid>
      <description>Python을 이용해서 AWS의 여러 기능을 자동화 할 때 Boto3를 많이들 쓰실 것 같은데요. 이번 달에는 Boto3를 쓰면서 궁금했던 것, 또는 자주 사용할 만한 것들을 정리해 보려고 합니다.
현재 사용 중인 AWS 계정 ID 얻기 여기서 계정 ID라고 하면, 12자리의 숫자로 구성된 계정의 ID를 의미합니다.
import boto3 account_id = boto3.client(&amp;#39;sts&amp;#39;).get_caller_identity().get(&amp;#39;Account&amp;#39;) 출처: Stack Overflow
에러 다루기 출처: Boto3 Documentation
Boto3의 코드를 열어보면, 서비스에 따라 발생할 수 있는 모든 에러를 저장하고 있지 않습니다. Boto3와 AWS CLI의 기반이 되는 Botocore 프로젝트의 코드에서도 모든 종류의 예외를 다루지 않습니다.</description>
    </item>
    
    <item>
      <title>S3 버킷의 객체가 1,000개를 넘을 때 객체 목록 조회하기</title>
      <link>/posts/list-over-1000-files-from-s3/</link>
      <pubDate>Thu, 29 Nov 2018 00:38:00 +0900</pubDate>
      
      <guid>/posts/list-over-1000-files-from-s3/</guid>
      <description>S3 버킷에는 여러 파일들을 저장할 수 있다. 그런데, 버킷에 저장된 파일의 목록을 보고 싶은 경우가 있을 것이다. 하지만, AWS의 Python SDK인 Boto3에서 list_objects()나 list_objects_v2() 함수를 이용하면 최대 1,000개까지의 object만 가져올 수 있다. [참고] (근본적으로는 AWS의 API가 최대 1,000개까지의 object만 가져오도록 구현되어 있다. - [참고])
이런 문제를 해결하기 위해, 다음과 같이 Paginator를 이용해 보자.
Paginator 이용하기 get_paginator()로 Paginator 가져오기 기본적으로 S3를 담당할 클라이언트를 생성한 뒤, get_paginator()로 Paginator를 가져온다. 여기서는 하나의 버킷에서 object들을 가져오기 위해 list_objects_v2를 이용한다.</description>
    </item>
    
  </channel>
</rss>
