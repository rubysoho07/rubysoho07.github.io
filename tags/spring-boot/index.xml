<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Boot on GoniGoni!</title>
    <link>/tags/spring-boot/</link>
    <description>Recent content in Spring Boot on GoniGoni!</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 27 May 2023 22:10:18 +0900</lastBuildDate>
    <atom:link href="/tags/spring-boot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EKS에 올린 Spring Boot 애플리케이션에 IAM Role 연결하기</title>
      <link>/posts/springboot-iam-role/</link>
      <pubDate>Sat, 27 May 2023 22:10:18 +0900</pubDate>
      <guid>/posts/springboot-iam-role/</guid>
      <description>&lt;p&gt;최근 EKS에 Spring Boot 애플리케이션을 올렸는데, ServiceAccount에 IAM Role을 연결했음에도 AWS API를 호출하지 못하는 문제가 있었습니다. 이 문제를 해결하기 위해 테스트 한 과정을 남겨보려고 합니다.&lt;/p&gt;&#xA;&lt;p&gt;우선, &lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/credentials-chain.html&#34;&gt;AWS의 Java 버전 SDK는 부여된 권한을 어떻게 찾는지&lt;/a&gt; 알아보겠습니다. 따로 설정을 하지 않았다면, 아래와 같은 순서로 찾습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java의 시스템 properties&lt;/li&gt;&#xA;&lt;li&gt;환경 변수&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;AWS의 STS(Security Token Service)로 부터 얻은 Web Identity Token&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;공유된 &lt;code&gt;credentials&lt;/code&gt;, &lt;code&gt;config&lt;/code&gt; 파일: 별도의 설정이 없으면 &lt;code&gt;default&lt;/code&gt; 프로필을 이용&lt;/li&gt;&#xA;&lt;li&gt;ECS 컨테이너 credentials&lt;/li&gt;&#xA;&lt;li&gt;EC2 인스턴스에 부여된 IAM Role&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;그리고 EKS의 IAM Roles for Service Accounts(이후 IRSA로 표기) 기능은 STS(Security Token Service)의 &lt;code&gt;AssumeRoleWithWebIdentity&lt;/code&gt; API 호출을 통해 권한을 얻습니다. (&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html&#34;&gt;참고&lt;/a&gt;) 그렇기 때문에 STS을 사용할 수 있어야 합니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
